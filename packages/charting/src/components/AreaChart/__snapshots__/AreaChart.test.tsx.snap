// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AreaChart snapShot testing renders Areachart correctly 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_4"
  role="presentation"
>
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
    data-focuszone-id="FocusZone5"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      height={0}
      style={
        Object {
          "display": "block",
        }
      }
      width={0}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 400;
            }
            @media screen and (-ms-high-contrast: white-on-black){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_4"
        transform="translate(0, -35)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 400;
            }
            @media screen and (-ms-high-contrast: white-on-black){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              fill: #323130;
              opacity: 0.2;
            }
            @media screen and (-ms-high-contrast: white-on-black){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_4"
        transform="translate(40, 0)"
      />
      <g>
        <rect
          fill="transparent"
          height={-20}
          id="rectangle3"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          width={-20}
        />
      </g>
      <g>
        <path
          d="M40,-0.625L-20,20"
          fill="transparent"
          id="0-line-areaChart_0"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          opacity={1}
          stroke="red"
          strokeWidth={3}
        />
        <path
          d="M40,-0.625L-20,20L-20,-35L40,-35Z"
          fill="red"
          fillOpacity={0.7}
          id="0-graph-areaChart_0"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
        />
        <g
          clipPath="url(#clip)"
          d="M40,-0.625L-20,20L-20,-35L40,-35Z"
        >
          <circle
            cx={40}
            cy={-0.625}
            data-is-focusable={true}
            fill="red"
            id="circle2_0"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={0}
            stroke="red"
            strokeWidth={3}
            visibility="hidden"
          />
          <circle
            cx={-20}
            cy={20}
            data-is-focusable={true}
            fill="red"
            id="circle2_1"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={0}
            stroke="red"
            strokeWidth={3}
            visibility="hidden"
          />
        </g>
        <line
          id="verticalLine_1"
          opacity={0.5}
          stroke="red"
          strokeDasharray={5.5}
          strokeWidth={1}
          visibility="hidden"
          x1={0}
          x2={0}
          y1={0}
          y2={0}
        />
      </g>
    </svg>
  </div>
  <div
    className=

        {
          margin-left: 20px;
          margin-top: 8px;
        }
  >
    <div
      className=

          {
            align-items: center;
            margin-bottom: 0;
            margin-left: -8px;
            margin-right: 0;
            margin-top: -8px;
            white-space: nowrap;
            width: 100%;
          }
    >
      <div>
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            data-automation-id="visibleContent"
            style={
              Object {
                "position": "fixed",
                "visibility": "hidden",
              }
            }
          >
            <div
              className=
                  ms-FocusZone
                  ms-OverflowSet
                  &:focus {
                    outline: none;
                  }
                  {
                    display: flex;
                    flex-wrap: wrap;
                    justify-content: unset;
                    position: relative;
                  }
              data-focuszone-id="FocusZone6"
              onFocus={[Function]}
              onKeyDown={[Function]}
              onMouseDownCapture={[Function]}
              role="listbox"
            >
              <div
                className=
                    ms-OverflowSet-item
                    {
                      display: inherit;
                      flex-shrink: 0;
                    }
              >
                <button
                  aria-label="metaData1"
                  aria-posinset={1}
                  aria-selected={false}
                  aria-setsize={1}
                  className=

                      {
                        align-items: center;
                        background: none;
                        border: none;
                        cursor: pointer;
                        display: flex;
                        outline: transparent;
                        padding-bottom: 8px;
                        padding-left: 8px;
                        padding-right: 8px;
                        padding-top: 8px;
                        position: relative;
                      }
                      &::-moz-focus-inner {
                        border: 0;
                      }
                      .ms-Fabric--isFocusVisible &:focus:after {
                        border: 1px solid transparent;
                        bottom: 1px;
                        content: "";
                        left: 1px;
                        outline: 1px solid #605e5c;
                        position: absolute;
                        right: 1px;
                        top: 1px;
                        z-index: 1;
                      }
                      @media screen and (-ms-high-contrast: active){.ms-Fabric--isFocusVisible &:focus:after {
                        outline-color: #605e5c;
                      }
                  data-is-focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                  role="option"
                >
                  <div
                    className=

                        {
                          background-color: red;
                          background-image: ;
                          border-color: red;
                          border: 1px solid;
                          height: 12px;
                          margin-right: 8px;
                          opacity: ;
                          width: 12px;
                        }
                        @media screen and (-ms-high-contrast: active){& {
                          background-image: linear-gradient(to right, red, red);
                          opacity: ;
                        }
                  />
                  <div
                    className=

                        {
                          -moz-osx-font-smoothing: grayscale;
                          -webkit-font-smoothing: antialiased;
                          color: #323130;
                          font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                          font-size: 12px;
                          font-weight: 400;
                          line-height: 16px;
                          opacity: ;
                        }
                  >
                    metaData1
                  </div>
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`AreaChart snapShot testing renders enabledLegendsWrapLines correctly 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_24"
  role="presentation"
>
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
    data-focuszone-id="FocusZone25"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      height={0}
      style={
        Object {
          "display": "block",
        }
      }
      width={0}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 400;
            }
            @media screen and (-ms-high-contrast: white-on-black){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_24"
        transform="translate(0, -35)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 400;
            }
            @media screen and (-ms-high-contrast: white-on-black){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              fill: #323130;
              opacity: 0.2;
            }
            @media screen and (-ms-high-contrast: white-on-black){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_24"
        transform="translate(40, 0)"
      />
      <g>
        <rect
          fill="transparent"
          height={-20}
          id="rectangle23"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          width={-20}
        />
      </g>
      <g>
        <path
          d="M40,-0.625L-20,20"
          fill="transparent"
          id="0-line-areaChart_20"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          opacity={1}
          stroke="red"
          strokeWidth={3}
        />
        <path
          d="M40,-0.625L-20,20L-20,-35L40,-35Z"
          fill="red"
          fillOpacity={0.7}
          id="0-graph-areaChart_20"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
        />
        <g
          clipPath="url(#clip)"
          d="M40,-0.625L-20,20L-20,-35L40,-35Z"
        >
          <circle
            cx={40}
            cy={-0.625}
            data-is-focusable={true}
            fill="red"
            id="circle22_0"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={0}
            stroke="red"
            strokeWidth={3}
            visibility="hidden"
          />
          <circle
            cx={-20}
            cy={20}
            data-is-focusable={true}
            fill="red"
            id="circle22_1"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={0}
            stroke="red"
            strokeWidth={3}
            visibility="hidden"
          />
        </g>
        <line
          id="verticalLine_21"
          opacity={0.5}
          stroke="red"
          strokeDasharray={5.5}
          strokeWidth={1}
          visibility="hidden"
          x1={0}
          x2={0}
          y1={0}
          y2={0}
        />
      </g>
    </svg>
  </div>
  <div
    className=

        {
          margin-left: 20px;
          margin-top: 8px;
        }
  >
    <div
      className=

          {
            align-items: center;
            margin-bottom: 0;
            margin-left: -8px;
            margin-right: 0;
            margin-top: -8px;
            white-space: nowrap;
            width: 100%;
          }
    >
      <div
        className=
            ms-FocusZone
            ms-OverflowSet
            &:focus {
              outline: none;
            }
            {
              display: flex;
              flex-wrap: wrap;
              justify-content: unset;
              position: relative;
            }
        data-focuszone-id="FocusZone26"
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDownCapture={[Function]}
        role="listbox"
      >
        <div
          className=
              ms-OverflowSet-item
              {
                display: inherit;
                flex-shrink: 0;
              }
        >
          <button
            aria-label="metaData1"
            aria-posinset={1}
            aria-selected={false}
            aria-setsize={1}
            className=

                {
                  align-items: center;
                  background: none;
                  border: none;
                  cursor: pointer;
                  display: flex;
                  outline: transparent;
                  padding-bottom: 8px;
                  padding-left: 8px;
                  padding-right: 8px;
                  padding-top: 8px;
                  position: relative;
                }
                &::-moz-focus-inner {
                  border: 0;
                }
                .ms-Fabric--isFocusVisible &:focus:after {
                  border: 1px solid transparent;
                  bottom: 1px;
                  content: "";
                  left: 1px;
                  outline: 1px solid #605e5c;
                  position: absolute;
                  right: 1px;
                  top: 1px;
                  z-index: 1;
                }
                @media screen and (-ms-high-contrast: active){.ms-Fabric--isFocusVisible &:focus:after {
                  outline-color: #605e5c;
                }
            data-is-focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            role="option"
          >
            <div
              className=

                  {
                    background-color: red;
                    background-image: ;
                    border-color: red;
                    border: 1px solid;
                    height: 12px;
                    margin-right: 8px;
                    opacity: ;
                    width: 12px;
                  }
                  @media screen and (-ms-high-contrast: active){& {
                    background-image: linear-gradient(to right, red, red);
                    opacity: ;
                  }
            />
            <div
              className=

                  {
                    -moz-osx-font-smoothing: grayscale;
                    -webkit-font-smoothing: antialiased;
                    color: #323130;
                    font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                    font-size: 12px;
                    font-weight: 400;
                    line-height: 16px;
                    opacity: ;
                  }
            >
              metaData1
            </div>
          </button>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`AreaChart snapShot testing renders hideLegend hhh correctly 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_11"
  role="presentation"
>
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
    data-focuszone-id="FocusZone12"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      height={0}
      style={
        Object {
          "display": "block",
        }
      }
      width={0}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 400;
            }
            @media screen and (-ms-high-contrast: white-on-black){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_11"
        transform="translate(0, -35)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 400;
            }
            @media screen and (-ms-high-contrast: white-on-black){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              fill: #323130;
              opacity: 0.2;
            }
            @media screen and (-ms-high-contrast: white-on-black){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_11"
        transform="translate(40, 0)"
      />
      <g>
        <rect
          fill="transparent"
          height={-20}
          id="rectangle10"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          width={-20}
        />
      </g>
      <g>
        <path
          d="M40,-0.625L-20,20"
          fill="transparent"
          id="0-line-areaChart_7"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          opacity={1}
          stroke="red"
          strokeWidth={3}
        />
        <path
          d="M40,-0.625L-20,20L-20,-35L40,-35Z"
          fill="red"
          fillOpacity={0.7}
          id="0-graph-areaChart_7"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
        />
        <g
          clipPath="url(#clip)"
          d="M40,-0.625L-20,20L-20,-35L40,-35Z"
        >
          <circle
            cx={40}
            cy={-0.625}
            data-is-focusable={true}
            fill="red"
            id="circle9_0"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={0}
            stroke="red"
            strokeWidth={3}
            visibility="hidden"
          />
          <circle
            cx={-20}
            cy={20}
            data-is-focusable={true}
            fill="red"
            id="circle9_1"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={0}
            stroke="red"
            strokeWidth={3}
            visibility="hidden"
          />
        </g>
        <line
          id="verticalLine_8"
          opacity={0.5}
          stroke="red"
          strokeDasharray={5.5}
          strokeWidth={1}
          visibility="hidden"
          x1={0}
          x2={0}
          y1={0}
          y2={0}
        />
      </g>
    </svg>
  </div>
</div>
`;

exports[`AreaChart snapShot testing renders hideTooltip correctly 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_17"
  role="presentation"
>
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
    data-focuszone-id="FocusZone18"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      height={0}
      style={
        Object {
          "display": "block",
        }
      }
      width={0}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 400;
            }
            @media screen and (-ms-high-contrast: white-on-black){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_17"
        transform="translate(0, -35)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 400;
            }
            @media screen and (-ms-high-contrast: white-on-black){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              fill: #323130;
              opacity: 0.2;
            }
            @media screen and (-ms-high-contrast: white-on-black){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_17"
        transform="translate(40, 0)"
      />
      <g>
        <rect
          fill="transparent"
          height={-20}
          id="rectangle16"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          width={-20}
        />
      </g>
      <g>
        <path
          d="M40,-0.625L-20,20"
          fill="transparent"
          id="0-line-areaChart_13"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          opacity={1}
          stroke="red"
          strokeWidth={3}
        />
        <path
          d="M40,-0.625L-20,20L-20,-35L40,-35Z"
          fill="red"
          fillOpacity={0.7}
          id="0-graph-areaChart_13"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
        />
        <g
          clipPath="url(#clip)"
          d="M40,-0.625L-20,20L-20,-35L40,-35Z"
        >
          <circle
            cx={40}
            cy={-0.625}
            data-is-focusable={true}
            fill="red"
            id="circle15_0"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={0}
            stroke="red"
            strokeWidth={3}
            visibility="hidden"
          />
          <circle
            cx={-20}
            cy={20}
            data-is-focusable={true}
            fill="red"
            id="circle15_1"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={0}
            stroke="red"
            strokeWidth={3}
            visibility="hidden"
          />
        </g>
        <line
          id="verticalLine_14"
          opacity={0.5}
          stroke="red"
          strokeDasharray={5.5}
          strokeWidth={1}
          visibility="hidden"
          x1={0}
          x2={0}
          y1={0}
          y2={0}
        />
      </g>
    </svg>
  </div>
  <div
    className=

        {
          margin-left: 20px;
          margin-top: 8px;
        }
  >
    <div
      className=

          {
            align-items: center;
            margin-bottom: 0;
            margin-left: -8px;
            margin-right: 0;
            margin-top: -8px;
            white-space: nowrap;
            width: 100%;
          }
    >
      <div>
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            data-automation-id="visibleContent"
            style={
              Object {
                "position": "fixed",
                "visibility": "hidden",
              }
            }
          >
            <div
              className=
                  ms-FocusZone
                  ms-OverflowSet
                  &:focus {
                    outline: none;
                  }
                  {
                    display: flex;
                    flex-wrap: wrap;
                    justify-content: unset;
                    position: relative;
                  }
              data-focuszone-id="FocusZone19"
              onFocus={[Function]}
              onKeyDown={[Function]}
              onMouseDownCapture={[Function]}
              role="listbox"
            >
              <div
                className=
                    ms-OverflowSet-item
                    {
                      display: inherit;
                      flex-shrink: 0;
                    }
              >
                <button
                  aria-label="metaData1"
                  aria-posinset={1}
                  aria-selected={false}
                  aria-setsize={1}
                  className=

                      {
                        align-items: center;
                        background: none;
                        border: none;
                        cursor: pointer;
                        display: flex;
                        outline: transparent;
                        padding-bottom: 8px;
                        padding-left: 8px;
                        padding-right: 8px;
                        padding-top: 8px;
                        position: relative;
                      }
                      &::-moz-focus-inner {
                        border: 0;
                      }
                      .ms-Fabric--isFocusVisible &:focus:after {
                        border: 1px solid transparent;
                        bottom: 1px;
                        content: "";
                        left: 1px;
                        outline: 1px solid #605e5c;
                        position: absolute;
                        right: 1px;
                        top: 1px;
                        z-index: 1;
                      }
                      @media screen and (-ms-high-contrast: active){.ms-Fabric--isFocusVisible &:focus:after {
                        outline-color: #605e5c;
                      }
                  data-is-focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                  role="option"
                >
                  <div
                    className=

                        {
                          background-color: red;
                          background-image: ;
                          border-color: red;
                          border: 1px solid;
                          height: 12px;
                          margin-right: 8px;
                          opacity: ;
                          width: 12px;
                        }
                        @media screen and (-ms-high-contrast: active){& {
                          background-image: linear-gradient(to right, red, red);
                          opacity: ;
                        }
                  />
                  <div
                    className=

                        {
                          -moz-osx-font-smoothing: grayscale;
                          -webkit-font-smoothing: antialiased;
                          color: #323130;
                          font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                          font-size: 12px;
                          font-weight: 400;
                          line-height: 16px;
                          opacity: ;
                        }
                  >
                    metaData1
                  </div>
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`AreaChart snapShot testing renders showXAxisLablesTooltip correctly 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_31"
  role="presentation"
>
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
    data-focuszone-id="FocusZone32"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      height={0}
      style={
        Object {
          "display": "block",
        }
      }
      width={0}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 400;
            }
            @media screen and (-ms-high-contrast: white-on-black){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_31"
        transform="translate(0, -35)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 400;
            }
            @media screen and (-ms-high-contrast: white-on-black){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              fill: #323130;
              opacity: 0.2;
            }
            @media screen and (-ms-high-contrast: white-on-black){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_31"
        transform="translate(40, 0)"
      />
      <g>
        <rect
          fill="transparent"
          height={-20}
          id="rectangle30"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          width={-20}
        />
      </g>
      <g>
        <path
          d="M40,-0.625L-20,20"
          fill="transparent"
          id="0-line-areaChart_27"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          opacity={1}
          stroke="red"
          strokeWidth={3}
        />
        <path
          d="M40,-0.625L-20,20L-20,-35L40,-35Z"
          fill="red"
          fillOpacity={0.7}
          id="0-graph-areaChart_27"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
        />
        <g
          clipPath="url(#clip)"
          d="M40,-0.625L-20,20L-20,-35L40,-35Z"
        >
          <circle
            cx={40}
            cy={-0.625}
            data-is-focusable={true}
            fill="red"
            id="circle29_0"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={0}
            stroke="red"
            strokeWidth={3}
            visibility="hidden"
          />
          <circle
            cx={-20}
            cy={20}
            data-is-focusable={true}
            fill="red"
            id="circle29_1"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={0}
            stroke="red"
            strokeWidth={3}
            visibility="hidden"
          />
        </g>
        <line
          id="verticalLine_28"
          opacity={0.5}
          stroke="red"
          strokeDasharray={5.5}
          strokeWidth={1}
          visibility="hidden"
          x1={0}
          x2={0}
          y1={0}
          y2={0}
        />
      </g>
    </svg>
  </div>
  <div
    className=

        {
          margin-left: 20px;
          margin-top: 8px;
        }
  >
    <div
      className=

          {
            align-items: center;
            margin-bottom: 0;
            margin-left: -8px;
            margin-right: 0;
            margin-top: -8px;
            white-space: nowrap;
            width: 100%;
          }
    >
      <div>
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            data-automation-id="visibleContent"
            style={
              Object {
                "position": "fixed",
                "visibility": "hidden",
              }
            }
          >
            <div
              className=
                  ms-FocusZone
                  ms-OverflowSet
                  &:focus {
                    outline: none;
                  }
                  {
                    display: flex;
                    flex-wrap: wrap;
                    justify-content: unset;
                    position: relative;
                  }
              data-focuszone-id="FocusZone33"
              onFocus={[Function]}
              onKeyDown={[Function]}
              onMouseDownCapture={[Function]}
              role="listbox"
            >
              <div
                className=
                    ms-OverflowSet-item
                    {
                      display: inherit;
                      flex-shrink: 0;
                    }
              >
                <button
                  aria-label="metaData1"
                  aria-posinset={1}
                  aria-selected={false}
                  aria-setsize={1}
                  className=

                      {
                        align-items: center;
                        background: none;
                        border: none;
                        cursor: pointer;
                        display: flex;
                        outline: transparent;
                        padding-bottom: 8px;
                        padding-left: 8px;
                        padding-right: 8px;
                        padding-top: 8px;
                        position: relative;
                      }
                      &::-moz-focus-inner {
                        border: 0;
                      }
                      .ms-Fabric--isFocusVisible &:focus:after {
                        border: 1px solid transparent;
                        bottom: 1px;
                        content: "";
                        left: 1px;
                        outline: 1px solid #605e5c;
                        position: absolute;
                        right: 1px;
                        top: 1px;
                        z-index: 1;
                      }
                      @media screen and (-ms-high-contrast: active){.ms-Fabric--isFocusVisible &:focus:after {
                        outline-color: #605e5c;
                      }
                  data-is-focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                  role="option"
                >
                  <div
                    className=

                        {
                          background-color: red;
                          background-image: ;
                          border-color: red;
                          border: 1px solid;
                          height: 12px;
                          margin-right: 8px;
                          opacity: ;
                          width: 12px;
                        }
                        @media screen and (-ms-high-contrast: active){& {
                          background-image: linear-gradient(to right, red, red);
                          opacity: ;
                        }
                  />
                  <div
                    className=

                        {
                          -moz-osx-font-smoothing: grayscale;
                          -webkit-font-smoothing: antialiased;
                          color: #323130;
                          font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                          font-size: 12px;
                          font-weight: 400;
                          line-height: 16px;
                          opacity: ;
                        }
                  >
                    metaData1
                  </div>
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`AreaChart snapShot testing renders wrapXAxisLables correctly 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_38"
  role="presentation"
>
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
    data-focuszone-id="FocusZone39"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      height={0}
      style={
        Object {
          "display": "block",
        }
      }
      width={0}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 400;
            }
            @media screen and (-ms-high-contrast: white-on-black){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_38"
        transform="translate(0, -35)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 400;
            }
            @media screen and (-ms-high-contrast: white-on-black){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              fill: #323130;
              opacity: 0.2;
            }
            @media screen and (-ms-high-contrast: white-on-black){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_38"
        transform="translate(40, 0)"
      />
      <g>
        <rect
          fill="transparent"
          height={-20}
          id="rectangle37"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          width={-20}
        />
      </g>
      <g>
        <path
          d="M40,-0.625L-20,20"
          fill="transparent"
          id="0-line-areaChart_34"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          opacity={1}
          stroke="red"
          strokeWidth={3}
        />
        <path
          d="M40,-0.625L-20,20L-20,-35L40,-35Z"
          fill="red"
          fillOpacity={0.7}
          id="0-graph-areaChart_34"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
        />
        <g
          clipPath="url(#clip)"
          d="M40,-0.625L-20,20L-20,-35L40,-35Z"
        >
          <circle
            cx={40}
            cy={-0.625}
            data-is-focusable={true}
            fill="red"
            id="circle36_0"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={0}
            stroke="red"
            strokeWidth={3}
            visibility="hidden"
          />
          <circle
            cx={-20}
            cy={20}
            data-is-focusable={true}
            fill="red"
            id="circle36_1"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={0}
            stroke="red"
            strokeWidth={3}
            visibility="hidden"
          />
        </g>
        <line
          id="verticalLine_35"
          opacity={0.5}
          stroke="red"
          strokeDasharray={5.5}
          strokeWidth={1}
          visibility="hidden"
          x1={0}
          x2={0}
          y1={0}
          y2={0}
        />
      </g>
    </svg>
  </div>
  <div
    className=

        {
          margin-left: 20px;
          margin-top: 8px;
        }
  >
    <div
      className=

          {
            align-items: center;
            margin-bottom: 0;
            margin-left: -8px;
            margin-right: 0;
            margin-top: -8px;
            white-space: nowrap;
            width: 100%;
          }
    >
      <div>
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            data-automation-id="visibleContent"
            style={
              Object {
                "position": "fixed",
                "visibility": "hidden",
              }
            }
          >
            <div
              className=
                  ms-FocusZone
                  ms-OverflowSet
                  &:focus {
                    outline: none;
                  }
                  {
                    display: flex;
                    flex-wrap: wrap;
                    justify-content: unset;
                    position: relative;
                  }
              data-focuszone-id="FocusZone40"
              onFocus={[Function]}
              onKeyDown={[Function]}
              onMouseDownCapture={[Function]}
              role="listbox"
            >
              <div
                className=
                    ms-OverflowSet-item
                    {
                      display: inherit;
                      flex-shrink: 0;
                    }
              >
                <button
                  aria-label="metaData1"
                  aria-posinset={1}
                  aria-selected={false}
                  aria-setsize={1}
                  className=

                      {
                        align-items: center;
                        background: none;
                        border: none;
                        cursor: pointer;
                        display: flex;
                        outline: transparent;
                        padding-bottom: 8px;
                        padding-left: 8px;
                        padding-right: 8px;
                        padding-top: 8px;
                        position: relative;
                      }
                      &::-moz-focus-inner {
                        border: 0;
                      }
                      .ms-Fabric--isFocusVisible &:focus:after {
                        border: 1px solid transparent;
                        bottom: 1px;
                        content: "";
                        left: 1px;
                        outline: 1px solid #605e5c;
                        position: absolute;
                        right: 1px;
                        top: 1px;
                        z-index: 1;
                      }
                      @media screen and (-ms-high-contrast: active){.ms-Fabric--isFocusVisible &:focus:after {
                        outline-color: #605e5c;
                      }
                  data-is-focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                  role="option"
                >
                  <div
                    className=

                        {
                          background-color: red;
                          background-image: ;
                          border-color: red;
                          border: 1px solid;
                          height: 12px;
                          margin-right: 8px;
                          opacity: ;
                          width: 12px;
                        }
                        @media screen and (-ms-high-contrast: active){& {
                          background-image: linear-gradient(to right, red, red);
                          opacity: ;
                        }
                  />
                  <div
                    className=

                        {
                          -moz-osx-font-smoothing: grayscale;
                          -webkit-font-smoothing: antialiased;
                          color: #323130;
                          font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                          font-size: 12px;
                          font-weight: 400;
                          line-height: 16px;
                          opacity: ;
                        }
                  >
                    metaData1
                  </div>
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`AreaChart snapShot testing renders yAxisTickFormat correctly 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_45"
  role="presentation"
>
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
    data-focuszone-id="FocusZone46"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      height={0}
      style={
        Object {
          "display": "block",
        }
      }
      width={0}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 400;
            }
            @media screen and (-ms-high-contrast: white-on-black){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_45"
        transform="translate(0, -35)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 400;
            }
            @media screen and (-ms-high-contrast: white-on-black){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              fill: #323130;
              opacity: 0.2;
            }
            @media screen and (-ms-high-contrast: white-on-black){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_45"
        transform="translate(40, 0)"
      />
      <g>
        <rect
          fill="transparent"
          height={-20}
          id="rectangle44"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          width={-20}
        />
      </g>
      <g>
        <path
          d="M40,-0.625L-20,20"
          fill="transparent"
          id="0-line-areaChart_41"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          opacity={1}
          stroke="red"
          strokeWidth={3}
        />
        <path
          d="M40,-0.625L-20,20L-20,-35L40,-35Z"
          fill="red"
          fillOpacity={0.7}
          id="0-graph-areaChart_41"
          onMouseMove={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
        />
        <g
          clipPath="url(#clip)"
          d="M40,-0.625L-20,20L-20,-35L40,-35Z"
        >
          <circle
            cx={40}
            cy={-0.625}
            data-is-focusable={true}
            fill="red"
            id="circle43_0"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={0}
            stroke="red"
            strokeWidth={3}
            visibility="hidden"
          />
          <circle
            cx={-20}
            cy={20}
            data-is-focusable={true}
            fill="red"
            id="circle43_1"
            onClick={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            r={0}
            stroke="red"
            strokeWidth={3}
            visibility="hidden"
          />
        </g>
        <line
          id="verticalLine_42"
          opacity={0.5}
          stroke="red"
          strokeDasharray={5.5}
          strokeWidth={1}
          visibility="hidden"
          x1={0}
          x2={0}
          y1={0}
          y2={0}
        />
      </g>
    </svg>
  </div>
  <div
    className=

        {
          margin-left: 20px;
          margin-top: 8px;
        }
  >
    <div
      className=

          {
            align-items: center;
            margin-bottom: 0;
            margin-left: -8px;
            margin-right: 0;
            margin-top: -8px;
            white-space: nowrap;
            width: 100%;
          }
    >
      <div>
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            data-automation-id="visibleContent"
            style={
              Object {
                "position": "fixed",
                "visibility": "hidden",
              }
            }
          >
            <div
              className=
                  ms-FocusZone
                  ms-OverflowSet
                  &:focus {
                    outline: none;
                  }
                  {
                    display: flex;
                    flex-wrap: wrap;
                    justify-content: unset;
                    position: relative;
                  }
              data-focuszone-id="FocusZone47"
              onFocus={[Function]}
              onKeyDown={[Function]}
              onMouseDownCapture={[Function]}
              role="listbox"
            >
              <div
                className=
                    ms-OverflowSet-item
                    {
                      display: inherit;
                      flex-shrink: 0;
                    }
              >
                <button
                  aria-label="metaData1"
                  aria-posinset={1}
                  aria-selected={false}
                  aria-setsize={1}
                  className=

                      {
                        align-items: center;
                        background: none;
                        border: none;
                        cursor: pointer;
                        display: flex;
                        outline: transparent;
                        padding-bottom: 8px;
                        padding-left: 8px;
                        padding-right: 8px;
                        padding-top: 8px;
                        position: relative;
                      }
                      &::-moz-focus-inner {
                        border: 0;
                      }
                      .ms-Fabric--isFocusVisible &:focus:after {
                        border: 1px solid transparent;
                        bottom: 1px;
                        content: "";
                        left: 1px;
                        outline: 1px solid #605e5c;
                        position: absolute;
                        right: 1px;
                        top: 1px;
                        z-index: 1;
                      }
                      @media screen and (-ms-high-contrast: active){.ms-Fabric--isFocusVisible &:focus:after {
                        outline-color: #605e5c;
                      }
                  data-is-focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                  role="option"
                >
                  <div
                    className=

                        {
                          background-color: red;
                          background-image: ;
                          border-color: red;
                          border: 1px solid;
                          height: 12px;
                          margin-right: 8px;
                          opacity: ;
                          width: 12px;
                        }
                        @media screen and (-ms-high-contrast: active){& {
                          background-image: linear-gradient(to right, red, red);
                          opacity: ;
                        }
                  />
                  <div
                    className=

                        {
                          -moz-osx-font-smoothing: grayscale;
                          -webkit-font-smoothing: antialiased;
                          color: #323130;
                          font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                          font-size: 12px;
                          font-weight: 400;
                          line-height: 16px;
                          opacity: ;
                        }
                  >
                    metaData1
                  </div>
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;
